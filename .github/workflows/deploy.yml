name: Terraform Deploy

on:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0


    - name: Ensure ECR repository exists
      run: |
       if ! aws ecr describe-repositories --repository-names devops-project-2-app; then
        aws ecr create-repository --repository-name devops-project-2-app
       else
        echo "ECR repository already exists, skipping creation"
       fi
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_DEFAULT_REGION: eu-central-1

    - name: Terraform Import Existing Resources
      run: |
       terraform init -upgrade
       terraform import aws_ecr_repository.app devops-project-2-app || echo "Already imported"
       terraform import aws_iam_openid_connect_provider.github arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com || echo "Already imported"
       terraform import aws_kms_alias.this arn:aws:kms:eu-central-1:${{ secrets.AWS_ACCOUNT_ID }}:alias/eks/${{ env.PROJECT_NAME }}-eks || echo "Already imported"
       terraform import aws_cloudwatch_log_group.this "/aws/eks/${{ env.PROJECT_NAME }}-eks/cluster" || echo "Already imported"
      working-directory: terraform
      env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_DEFAULT_REGION:  eu-central-1
       PROJECT_NAME: devops-project-2


    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_github_owner: ${{ secrets.GH_OWNER }}
        TF_VAR_github_repo: ${{ secrets.GH_NAME }}


    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_github_owner: ${{ secrets.GH_OWNER }}
        TF_VAR_github_repo: ${{ secrets.GH_NAME }}
        